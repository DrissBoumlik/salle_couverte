<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>